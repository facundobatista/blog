2015-09-16 16:28:10
Magicicada: the evolution of file sync
<tags>



I spent my first years in at Canonical working in the Ubuntu One project, particularly in what we always called "filesync": the pure file synchronization server (which was propietary at that time), the client, and the protocol (both always open source).

Then, the company didn't push the project anymore, I started to work on other areas, and eventually the project was cancelled. When they cancelled it, they made the promise of opensourcing the server, which will allow to anyone put the full stack to work and have their own personal filesync cloud.

Time passed by, and at some point I got instructions to put daily time on that opensourcing work. I've been working the whole day on this for several weeks, and even more weeks part time, massaging all the code and dependencies for the project to be public. Then <a href="https://insights.ubuntu.com/2015/08/10/ubuntu-one-file-syncing-code-open-sourced/">the project was released</a>.

Was the project easily usable for anyone to start syncing files? Not really, my goals when working in the project to make it available for everybody were:
<ul>
<li>use only dependencies and libraries from a standard Ubuntu Precise environment and from freely available code from Launchpad</li>
<li>"make test" to pass ok, which means that further development can be easily started</li>
<li>"make start-oauth" to start and work ok, which means that the server actually works and sync files</li>
</ul>

However, there's a lot to do for the service to be really used in a production environment where we can put our files and trust it, including but not limited to:
<ul>
<li>keep cleaning the project, lot of quirks and small weirdness to fix</li>
<li>make it to store files not in AWS but in the local filesystem</li>
<li>(after last item because some internal working reasons involving resumable upload that won't explain here) make it work in Trusty, or even in any modern (Ubuntu or not Ubuntu) environment</li>
<li>make it work nicely in a production environment (currently, for example, everytime it starts it uses a fresh database!)</li>
<li>simplify it: the server will not longer be used to hold a million users so features like use PostgreSQL in several shards are not worth it anymore</li>
<li>and several etceteras</li>
</ul>

Note that part of this work already started!! Naty Bidart and myself are working actively in some of those points.

Where? Well, with Natalia we already had the Magicicada Project, which was a GUI to interact with the client. So we forked the rest of the projects and naturally put them under that namespace.

So, the whole solution stack currently is:
<ul>
<li><a href="https://launchpad.net/magicicada-server">Magicicada Server</a>: the one that "lives in the cloud" and holds the files so all your clients can access them.</li>
<li><a href="https://launchpad.net/magicicada-client">Magicicada Client</a>: the application that runs in background in each of your computers, uploading/downloading new/changed files from/to the server.</li>
<li><a href="https://launchpad.net/magicicada-protocol">Magicicada Protocol</a>: a project with common code between client and server, particularly all the protocol implementation that allows them to talk each other.</li>
<li><a href="https://launchpad.net/magicicada-gui">Magicicada GUI</a>: a small graphical utility that lets you interact and supervise what the client is doing in your computer.</li>
</ul>


<img src="http://www.taniquetil.com.ar/facundo/imgs/magicicada-logo.png" alt="Magicicada" height="192" width="192" />

All further work will be done in those projects. If you want to participate please <a href="mailto:magicicada-hackers@lists.launchpad.net">suscribe to the mailing list</a> or say hi in the IRC channel (#magicicada in Freenode). Also, you can <a href="https://bugs.launchpad.net/magicicada/+filebug">file issues</a> for any bug you find or new features/changes you want (be sure to choose the right project: server, client, protocol or gui).

If you're a bzr impaired developer, we have <a href="https://github.com/magicicada-bot/">mirrors in GitHub</a> (currently, only for the server, others will be added in the following weeks, ping us if you want any of these to happen sooner).

In any case, you may want to follow the <a href="https://twitter.com/magicicadaOK">Magicicada twitter account</a>, where will be posting all kind of progress notifications. |
